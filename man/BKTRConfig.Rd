% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bktr_config.R
\name{BKTRConfig}
\alias{BKTRConfig}
\title{R6 class that contains the configuration for a BKTR process}
\description{
A BKTRConfig object contains various information that are central to the
BKTR sampling process. It is notably used to configure the tensor backend, initialize values
for the algorithm (e,g. hyperparameters) or to define key algorithm parameters (e,g. number
of iterations or decomposition rank).
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{rank_decomp}}{Rank of the CP decomposition (Paper: \eqn{R})}

\item{\code{max_iter}}{Maximum number of iteration that the MCMC sampling will use
(Paper: \eqn{K_1 + K_2})}

\item{\code{burn_in_iter}}{Number of iteration before the sampling starts (Paper: \eqn{K_1})}

\item{\code{temporal_period_length}}{Period used in the periodic kernel (Paper: \eqn{T})}

\item{\code{spatial_smoothness_factor}}{Smoothness factor used in the Matern kernel}

\item{\code{kernel_variance}}{Variance used for all kernels (Paper: \eqn{\sigma^2_s, \sigma^2_t})}

\item{\code{sigma_r}}{Variance of the white noise process TODO (Paper: \eqn{\tau^{-1}})}

\item{\code{a_0}}{Initial value for the shape (\eqn{\alpha}) in the gamma function generating tau}

\item{\code{b_0}}{Initial value for the rate (\eqn{\beta}) in the gamma function generating tau}

\item{\code{periodic_scale_config}}{Periodic length scale's KernelSamplerConfig (Paper: \eqn{\gamma_1})}

\item{\code{decay_scale_config}}{Decay time scale's KernelSamplerConfig (Paper: \eqn{\gamma_2})}

\item{\code{spatial_length_config}}{spatial length-scale's KernelSamplerConfig (Paper: \eqn{\phi})}

\item{\code{torch_dtype}}{Type used for floating points in the tensor backend}

\item{\code{torch_device}}{Device used by the tensor backend for calculation (\code{'cuda'} or \code{'cpu'})}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{BKTRConfig$new()}}
\item \href{#method-clone}{\code{BKTRConfig$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new \code{BKTRConfig} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BKTRConfig$new(
  rank_decomp = NULL,
  burn_in_iter = NULL,
  max_iter = NULL,
  temporal_period_length = 7,
  spatial_smoothness_factor = 3,
  kernel_variance = 1,
  sigma_r = 0.01,
  a_0 = 1e-06,
  b_0 = 1e-06,
  period_slice_sampling_scale = log(10),
  period_min_hparam_val = log(0.001),
  period_max_hparam_val = log(1000),
  period_hparam_mu_prior = 0,
  period_hparam_precision_prior = 1,
  decay_slice_sampling_scale = log(10),
  decay_min_hparam_val = log(0.001),
  decay_max_hparam_val = log(1000),
  decay_hparam_mu_prior = 0,
  decay_hparam_precision_prior = 1,
  spatial_slice_sampling_scale = log(10),
  spatial_min_hparam_val = log(0.001),
  spatial_max_hparam_val = log(1000),
  spatial_hparam_mu_prior = 0,
  spatial_hparam_precision_prior = 1,
  torch_device = "cpu",
  torch_dtype = torch::torch_float64()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{rank_decomp}}{Integer: CP decomposition's Rank}

\item{\code{burn_in_iter}}{Integer: Iterations used for burn in during MCMC}

\item{\code{max_iter}}{Integer: Total number of iterations for MCMC}

\item{\code{temporal_period_length}}{Integer: Period for periodic kernel (\code{7} represent week's length)}

\item{\code{spatial_smoothness_factor}}{Integer (1,3,5): Matern kernel's smoothness (3 for Matern 3/2)}

\item{\code{kernel_variance}}{Numeric: Variance used for all kernels}

\item{\code{sigma_r}}{Numeric: Initial value of white noise's variance (\eqn{\tau^{-1}})}

\item{\code{a_0}}{Numeric: Initial value for the shape (\eqn{\alpha}) in the gamma function generating tau}

\item{\code{b_0}}{Numeric: Initial value for the rate (\eqn{\beta}) in the gamma function generating tau}

\item{\code{period_slice_sampling_scale}}{Numeric: Slice sampling scale of the periodic length scale}

\item{\code{period_min_hparam_val}}{Numeric: Minimum value for periodic length scale hyperparameter}

\item{\code{period_max_hparam_val}}{Numeric: Maximum value for periodic length scale hyperparameter}

\item{\code{period_hparam_mu_prior}}{Numeric: Initial value for periodic length scale mean}

\item{\code{period_hparam_precision_prior}}{Numeric: Initial value for periodic length scale precision}

\item{\code{decay_slice_sampling_scale}}{Numeric: Slice sampling scale for decay length scale}

\item{\code{decay_min_hparam_val}}{Numeric: Minimum value for decay length scale hyperparameter}

\item{\code{decay_max_hparam_val}}{Numeric: Maximum value for decay length scale hyperparameter}

\item{\code{decay_hparam_mu_prior}}{Numeric: Initial value for decay length scale mean}

\item{\code{decay_hparam_precision_prior}}{Numeric: Initial value for decay length scale precision}

\item{\code{spatial_slice_sampling_scale}}{Numeric: Slice sampling scale for spatial length scale}

\item{\code{spatial_min_hparam_val}}{Numeric: Minimum value for spatial length scale hyperparameter}

\item{\code{spatial_max_hparam_val}}{Numeric: Maximum value for spatial length scale hyperparameter}

\item{\code{spatial_hparam_mu_prior}}{Numeric: Initial value for spatial length scale mean}

\item{\code{spatial_hparam_precision_prior}}{Numeric: Initial value for spatial length scale precision}

\item{\code{torch_device}}{String ('cpu', 'cuda'): the device used by Torch for computation}

\item{\code{torch_dtype}}{Torch floating point type (\code{torch_float16()}, \code{torch_float32()},
\code{torch_float64()}): Default \code{torch_float64()} helps for large kernel cholesky decomposition}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{BKTRConfig} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BKTRConfig$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
